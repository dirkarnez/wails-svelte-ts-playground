name: golang-build-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      
permissions:
    contents: write
    
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install webkit2gtk
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo add-apt-repository 'deb http://gb.archive.ubuntu.com/ubuntu jammy main'
          sudo apt-get update -y && \
          sudo apt-get -y --no-install-recommends install \
            build-essential \
            webkit2gtk-4.0 \
            libwebkit2gtk-4.0
      
      - name: Setup go
        if: ${{ matrix.os != 'windows-latest' }}
        uses: actions/setup-go@v2
        with:
          go-version: '1.25.0' # The Go version to download (if necessary) and use.

      - name: Setup node
        uses: actions/setup-node@v5
        if: ${{ matrix.os != 'windows-latest' }}
        with:
          node-version: '22.x'

      - name: Setup go and node
        if: ${{ matrix.os == 'windows-latest' }}
        shell: cmd
        run: |
          .\setup.cmd
          
      - name: Build
        if: ${{ matrix.os != 'windows-latest' }}
        shell: bash
        working-directory: 'myproject'
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest && \
          wails version && \
          wails build

      - name: Build
        if: ${{ matrix.os == 'windows-latest' }}
        shell: cmd
        run: |
          .\local-build.cmd

      - shell: bash
        run: |
          ls -R

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: 'myproject/build/bin'
          filename: "${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.os }}.zip"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "myproject/build/bin/${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.os }}.zip"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
